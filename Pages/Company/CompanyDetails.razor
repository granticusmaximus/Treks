@page "/company/details/{id}"
@using Treks.Models
@using Treks.Services
@using Treks.Pages.Company
@using Treks.Pages.Tickets
@inject CompanyService companyService
@inject NavigationManager navigationManager

@if (company == null)
{
    <p>Loading...</p>
}
else
{
    <center>
        <div class="card">
            <div class="cardHeader"><h2>@company.Name Details</h2></div>
            <div class="cardBody">
                <strong>Contact Number:</strong> 
                <p>@company.ContactNumber</p>
                <strong>Email:</strong> 
                <p>@company.Email</p>
                <strong>Location:</strong>
                <p> @company.Address,<br/> @company.City, @company.State</p>
            </div>
            <hr/>
            <div class="cardFooter">
                    
                    <button class="btn btn-success" @onclick="NavigateToList">Back to Company List</button> &nbsp;
                    @if (!string.IsNullOrEmpty(id))
                    {
                        var editCompanyUrl = $"/company/edit/{id}";
                        <NavLink class="btn btn-warning ml-2" href="@editCompanyUrl">
                            <span aria-hidden="true">Edit Company</span>
                        </NavLink>
                    }
            </div>
            <hr/>
        </div>
    </center>
}

<hr/>

<div class="row mt-3">
    <div class="col-md-6">
        <center>
            <button class="btn btn-primary mt-3" @onclick="OpenCommentModal">Add Comment</button>
        </center>

        <!-- Add New Comment Modal -->
        <div class="modal fade @(showCommentModal ? "show d-block" : "d-none")" tabindex="-1" role="dialog">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Add Comment</h5>
                        <button type="button" class="close" @onclick="CloseCommentModal">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <AddComment id="@id" />
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" @onclick="CloseCommentModal">Close</button>
                    </div>
                </div>
            </div>
        </div>
        <h3>Comments</h3>
        <Comments id="@id" />
    </div>
    <div class="col-md-6">
        <center>
            <button class="btn btn-primary mt-3" @onclick="OpenAddTicketModal">Add New Ticket</button> &nbsp;
        </center>
        
        <h3 class="mt-4">Active Tickets</h3>
        @if (tickets != null && tickets.Any())
        {
            <table class="table">
                <thead>
                    <tr>
                        <th>Title</th>
                        <th>Due Date</th>
                        <th>Severity</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var ticket in tickets)
                    {
                        <tr>
                            <td>@ticket.Title</td>
                            <td>@ticket.DueDate.ToShortDateString()</td>
                            <td class="@GetSeverityCssClass(ticket.Severity.ToString()) text-uppercase text-white text-center" style="font-weight: 500">@ticket.Severity</td>
                            <td><button class="btn btn-primary" @onclick="() => ShowTicketDetails(ticket)"><span class="oi oi-eye" aria-hidden="true"></span></button></td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <p>No active tickets found.</p>
        }
    </div>
</div>

<!-- Ticket Details Modal -->
<div class="modal fade @(showTicketDetailsModal ? "show d-block" : "d-none")" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Ticket Details</h5>
                <button type="button" class="close" @onclick="() => showTicketDetailsModal = false">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @if (selectedTicket != null)
                {
                    <p><strong>Title:</strong> @selectedTicket.Title</p>
                    <p><strong>Description:</strong> @selectedTicket.Description</p>
                    <p><strong>Severity:</strong> @selectedTicket.Severity</p>
                    <p><strong>Due Date:</strong> @selectedTicket.DueDate.ToShortDateString()</p>
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" @onclick="() => showTicketDetailsModal = false">Close</button>
            </div>
        </div>
    </div>
</div>

<!-- Add New Ticket Modal -->
        <div class="modal fade @(showAddTicketModal ? "show d-block" : "d-none")" tabindex="-1" role="dialog">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Add New Ticket</h5>
                        <button type="button" class="close" @onclick="CloseAddTicketModal">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <CreateTicket />
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" @onclick="CloseAddTicketModal">Close</button>
                    </div>
                </div>
            </div>
        </div>

@code {
    [Parameter]
    public string id { get; set; }

    public int CompanyId => Convert.ToInt32(id);

    private bool showCommentModal = false;
    private bool showTicketModal = false;
    private bool showAddTicketModal = false;
    private bool showTicketDetailsModal = false;
    private Company company;
    private List<Ticket> tickets;
    private Ticket selectedTicket;

    private void OpenCommentModal()
    {
        showCommentModal = true;
    }

    private void CloseCommentModal()
    {
        showCommentModal = false;
    }

    private void OpenAddTicketModal()
    {
        showAddTicketModal = true;
    }

    private void CloseAddTicketModal()
    {
        showAddTicketModal = false;
        _ = LoadTickets();
    }


    protected override async Task OnInitializedAsync()
    {
        try
        {
            int companyID = Convert.ToInt32(id);
            company = await companyService.GetCompanyByIdAsync(companyID);
            await LoadTickets();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"An error occurred: {ex.Message}");
        }
    }

    private async Task LoadTickets()
    {
        try
        {
            int companyID = Convert.ToInt32(id);
            tickets = await companyService.GetActiveTicketsbyCompanyIdAsync(companyID);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"An error occurred: {ex.Message}");
        }
    }

    private void ShowTicketDetails(Ticket ticket)
    {
        selectedTicket = ticket;
        showTicketDetailsModal = true;
    }

    private string GetSeverityCssClass(string severity)
    {
        switch (severity.ToLower())
        {
            case "low":
                return "bg-success";
            case "medium":
                return "bg-warning";
            case "high":
                return "bg-danger";
            default:
                return "";
        }
    }

    private void NavigateToList()
    {
        navigationManager.NavigateTo("/companies");
    }
}
